import request from 'supertest';\nimport { createApp } from './helpers/request';\n\nconst app = createApp();\n\ndescribe('Users API - validation', () => {\n  const invalidUsers = [\n    {},\n    { email: 'not-an-email', name: 'x', role: 'STUDENT' },\n    { email: 'a@b.com', role: 'STUDENT' },\n    { email: 'a@b.com', name: 'x' },\n    { email: 'a@b.com', name: 'x', role: 'UNKNOWN' },\n  ];\n\n  test.each(invalidUsers.map((p, i) => [i, p]))('rejects invalid user create %p', async (_i, payload) => {\n    const res = await request(app).post('/api/users').send(payload as any);\n    expect(res.status).toBe(400);\n  });\n\n  const roles = ['STUDENT', 'VENDOR', 'ADMIN', 'ENGINEER'] as const;\n  test.each(roles.map((r) => [r]))('creates user with role %p', async (role) => {\n    const res = await request(app)\n      .post('/api/users')\n      .send({ email: ${role.toLowerCase()}@u.edu, name: ${role}-User, role });\n    expect(res.status).toBe(201);\n  });\n});\n