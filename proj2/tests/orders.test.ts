import request from 'supertest';\nimport { createApp } from './helpers/request';\n\nconst app = createApp();\n\ndescribe('Orders API', () => {\n  it('lists empty orders initially', async () => {\n    const res = await request(app).get('/api/orders');\n    expect(res.status).toBe(200);\n    expect(Array.isArray(res.body)).toBe(true);\n    expect(res.body.length).toBe(0);\n  });\n\n  it('creates an order and computes total', async () => {\n    const payload = {\n      userId: 'user-1',\n      vendorId: 'vendor-1',\n      items: [\n        { name: 'Burger', quantity: 1, price: 10 },\n        { name: 'Fries', quantity: 2, price: 3 },\n      ],\n      deliveryLocation: 'Building A',\n    };\n    const res = await request(app).post('/api/orders').send(payload);\n    expect(res.status).toBe(201);\n    expect(res.body.total).toBe(16);\n    expect(res.body.status).toBe('CREATED');\n\n    const getRes = await request(app).get(/api/orders/);\n    expect(getRes.status).toBe(200);\n    expect(getRes.body.id).toBe(res.body.id);\n  });\n\n  it('rejects invalid order', async () => {\n    const res = await request(app).post('/api/orders').send({});\n    expect(res.status).toBe(400);\n  });\n\n  it('updates order status', async () => {\n    const create = await request(app)\n      .post('/api/orders')\n      .send({ userId: 'u', vendorId: 'v', items: [{ name: 'x', quantity: 1, price: 1 }], deliveryLocation: 'loc' });\n    const id = create.body.id;\n    const patch = await request(app).patch(/api/orders/).send({ status: 'PREPARING' });\n    expect(patch.status).toBe(200);\n    expect(patch.body.status).toBe('PREPARING');\n  });\n\n  it('returns 404 for non-existing order', async () => {\n    const res = await request(app).get('/api/orders/nonexistent');\n    expect(res.status).toBe(404);\n  });\n\n  it('deletes an order', async () => {\n    const create = await request(app)\n      .post('/api/orders')\n      .send({ userId: 'u', vendorId: 'v', items: [{ name: 'x', quantity: 1, price: 1 }], deliveryLocation: 'loc' });\n    const id = create.body.id;\n    const del = await request(app).delete(/api/orders/);\n    expect(del.status).toBe(204);\n  });\n});\n