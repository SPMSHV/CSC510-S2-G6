import { Router, Request, Response } from 'express';\nimport Joi from 'joi';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const router = Router();\n\ntype UserRole = 'STUDENT' | 'VENDOR' | 'ADMIN' | 'ENGINEER';\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  role: UserRole;\n  createdAt: string;\n  updatedAt: string;\n}\n\nconst createSchema = Joi.object({\n  email: Joi.string().email().required(),\n  name: Joi.string().min(2).required(),\n  role: Joi.string().valid('STUDENT', 'VENDOR', 'ADMIN', 'ENGINEER').required(),\n});\n\nconst updateSchema = Joi.object({\n  email: Joi.string().email(),\n  name: Joi.string().min(2),\n  role: Joi.string().valid('STUDENT', 'VENDOR', 'ADMIN', 'ENGINEER'),\n}).min(1);\n\nconst users: Record<string, User> = {};\n\nrouter.get('/', (_req: Request, res: Response) => {\n  res.json(Object.values(users));\n});\n\nrouter.get('/:id', (req: Request, res: Response) => {\n  const user = users[req.params.id];\n  if (!user) return res.status(404).json({ error: 'User not found' });\n  res.json(user);\n});\n\nrouter.post('/', (req: Request, res: Response) => {\n  const { error, value } = createSchema.validate(req.body);\n  if (error) return res.status(400).json({ error: error.message });\n  const now = new Date().toISOString();\n  const id = uuidv4();\n  const user: User = { id, email: value.email, name: value.name, role: value.role, createdAt: now, updatedAt: now };\n  users[id] = user;\n  res.status(201).json(user);\n});\n\nrouter.patch('/:id', (req: Request, res: Response) => {\n  const user = users[req.params.id];\n  if (!user) return res.status(404).json({ error: 'User not found' });\n  const { error, value } = updateSchema.validate(req.body, { allowUnknown: false });\n  if (error) return res.status(400).json({ error: error.message });\n  Object.assign(user, value);\n  user.updatedAt = new Date().toISOString();\n  res.json(user);\n});\n\nrouter.delete('/:id', (req: Request, res: Response) => {\n  const user = users[req.params.id];\n  if (!user) return res.status(404).json({ error: 'User not found' });\n  delete users[req.params.id];\n  res.status(204).send();\n});\n